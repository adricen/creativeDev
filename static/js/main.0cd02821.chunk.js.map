{"version":3,"sources":["components/Header.js","components/Page.js","components/ThreeRender-start.js","components/App.js","components/reportWebVitals.js","index.js"],"names":["Header","infos","setLang","route","Container","fluid","className","Nav","justify","pages","returnedNav","page","path","lang","push","Item","Link","href","name","proceduralNav","Navbar","Collapse","finalFlags","flags","countryCode","ariaLabel","i","onClick","e","actualPath","document","location","split","length","target","style","fontSize","flagAside","Page","content","Triangle","props","useLoader","SVGLoader","paths","geom","useMemo","pointsToStroke","subPaths","getPoints","userData","geometry","doubleSided","color","toneMapped","Rig","children","ref","useRef","vec","THREE","useThree","camera","mouse","useFrame","position","lerp","set","x","current","y","rotation","Math","PI","Ground","useTexture","floor","normal","Reflector","resolution","args","debug","distortion","distortionMap","Material","metalness","roughnessMap","roughness","normalMap","normalScale","Scene","intensity","castShadow","scale","mirror","blur","mixBlur","mixStrength","OrbitControls","enablePan","enableZoom","enableRotate","ThreeRender","shadows","attach","fallback","cookies","Cookies","App","state","setLanguage","bind","this","setState","Content","defaultLanguage","newLang","oldRoute","window","hash","usrLang","get","navigator","language","userLanguage","routes","finalRoutes","exact","render","proceduralRoute","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0cd02821.chunk.js","sourcesContent":["import Container from 'react-bootstrap/Container'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport ReactCountryFlag from \"react-country-flag\"\n\nconst Header = ({infos, route, setLang }) => {\n    const proceduralNav = () => {\n      const pages = infos.pages\n      const returnedNav = []\n      for ( const page in pages ) {\n        const path = (page === 'home')? pages[page].path:pages[page].path[infos.lang]\n        returnedNav.push(\n          <Nav.Item>\n            <Nav.Link key={ page } href={ \"#/\"+path }>{ pages[page].name[infos.lang]}</Nav.Link>\n          </Nav.Item>\n        )\n      }\n      return returnedNav\n      // <Nav.Link href=\"/home\">{ (infos.pages != null)?infos.pages.home.name[infos.lang]:'rien'}</Nav.Link>\n    }\n    const flagAside = () => {\n      let finalFlags = []\n      const flags = [{\n        lang: 'fr',\n        countryCode:\"FR\",\n        ariaLabel:\"Fran√ßais\"\n      },{\n        lang: 'en',\n        countryCode:\"GB\",\n        ariaLabel:\"English\"\n      }]\n      for( const i in flags) {\n        finalFlags.push(\n          <Nav.Item key={i}><ReactCountryFlag\n          lang={ flags[i].lang }\n          onClick={ (e)=>{\n            let actualPath = document.location.href.split('/')\n            actualPath = actualPath[actualPath.length-1]\n            setLang(e.target.lang, actualPath)\n          }}\n          className={ flags[i].lang + \" emojiFlag\"  }\n          countryCode={ flags[i].countryCode }\n          style={{\n            fontSize: '2em',\n          }}\n          aria-label={ flags[i].ariaLabel }\n          /></Nav.Item>\n        )\n      }\n      return finalFlags\n    }\n    return(\n      <Container fluid=\"md\" className=\"mt-5 mb-5\">\n        <Nav justify key={'key2'} className=\"justify-content-center\">\n          { proceduralNav() }\n        </Nav>\n        <Navbar.Collapse key={'key3'} className=\"justify-content-end\">\n          { flagAside() }\n        </Navbar.Collapse>\n      </Container>\n    )\n}\nexport default Header\n","import Container from 'react-bootstrap/Container'\n\nconst Page = ({content, lang}) => {\n  // console.log(content);\n  return(\n    <Container fluid=\"md\" className=\"mt-5\">\n      <h1>{content.name[lang]}</h1>\n      <p>{content.content[lang]}</p>\n    </Container>\n  )\n}\nexport default Page\n","import * as THREE from 'three'\nimport {  Suspense, useMemo, useRef } from 'react' // Permet de charger les images\nimport { Canvas, useThree, useLoader, useFrame } from '@react-three/fiber'\nimport { OrbitControls, Reflector, Loader, useTexture } from '@react-three/drei'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader'\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader'\n\nconst Triangle = (props) => {\n  const {\n    paths: [path]\n  } = useLoader(SVGLoader, '/triangle.svg')\n  const geom = useMemo(() => SVGLoader.pointsToStroke(path.subPaths[0].getPoints(), path.userData.style), [])\n  return (\n    <mesh geometry={geom} doubleSided {...props}>\n      <meshBasicMaterial color=\"white\" toneMapped={false} />\n    </mesh>\n  )\n}\nconst Rig = ({ children }) => {\n  const ref = useRef()\n  const vec = new THREE.Vector3()\n  const { camera, mouse } = useThree()\n  useFrame(() => {\n    camera.position.lerp(vec.set(mouse.x * 2, 0, 3.5), 0.05)\n    ref.current.position.lerp(vec.set(mouse.x * 1, mouse.y * 0.1, 0), 0.1)\n    ref.current.rotation.y = THREE.MathUtils.lerp(ref.current.rotation.y, (-mouse.x * Math.PI) / 20, 0.1)\n  })\n  return <group ref={ref}>{children}</group>\n}\nconst Ground = (props) => {\n  const [floor, normal] = useTexture(['/textures/floor_roughness.jpeg', '/textures/floor_normal.jpeg'])\n  return (\n    <Reflector\n      resolution={1024}\n      args={[20, 20]}\n      {...props}\n      debug={0}\n      distortion={0.075}\n      distortionMap={floor}\n    >\n      {(Material, props) => <Material color=\"#c0c0c0\" metalness={0} roughnessMap={floor} roughness={0.65} normalMap={normal} normalScale={[0.6, 0.6]} {...props} />}\n    </Reflector>\n  )\n}\n\nconst Scene = () => {\n  return (\n    <>\n      <ambientLight intensity={0}/>\n      <directionalLight castShadow intensity={0.15} position={[0,2,-1]}/>\n      <Rig >\n        <Triangle scale={[0.01, 0.01, 0.01]} position={[0.8, -2, 0]} rotation={[0, 0, Math.PI / 3]} />\n        <Ground\n          mirror={1}\n          blur={[400, 120]}\n          mixBlur={10}\n          mixStrength={5}\n          rotation={[-Math.PI*0.5, 0, Math.PI*0.5]}\n          position={[0, -0.8, 0]}\n        />\n      </Rig >\n      <OrbitControls enablePan={true} enableZoom={true} enableRotate={true} />\n    </>\n  )\n}\n\nconst ThreeRender=()=> {\n  return(\n    <Canvas shadows>\n      <color attach=\"background\" args={['black']} />\n      <fog attach=\"fog\" args={['black', 10, 20]} />\n      <Suspense fallback={null}>\n        <Scene />\n      </Suspense>\n    </Canvas>\n  )\n}\n\nexport default ThreeRender\n","import { Component } from 'react'\nimport {HashRouter, Switch, Route} from 'react-router-dom'\nimport Cookies from 'universal-cookie';\nimport Content from \"../content.json\"\nimport Header from \"./Header.js\"\nimport Page from \"./Page.js\"\nimport ThreeRender from \"./ThreeRender-start.js\"\n\nconst cookies = new Cookies();\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      lang: 'fr',\n      pages: null,\n    }\n    this.setLanguage = this.setLanguage.bind(this)\n  }\n  componentDidMount(){\n    this.setState(Content)\n    this.setState({lang: this.defaultLanguage()})\n  }\n  setLanguage( newLang, oldRoute ){\n    this.setState({ lang: newLang })\n    cookies.set('lang', newLang);\n    // hard way new location -- improvable...\n    if(oldRoute === 'about' && newLang === 'fr'){\n      window.location.hash =  '#/a-propos'\n    } else if(oldRoute === 'a-propos' && newLang === 'en') {\n      window.location.hash =  '#/about'\n    }\n  }\n  defaultLanguage() {\n    let usrLang = cookies.get('lang') || navigator.language || navigator.userLanguage\n    usrLang = (usrLang === 'fr' || usrLang === 'fr-FR' || usrLang === 'fr-fr') ? 'fr': 'en'\n    cookies.set('lang', usrLang);\n    return usrLang\n  }\n  proceduralRoute() {\n    const routes = this.state.pages\n    const finalRoutes = []\n    // console.log(routes.length);\n    let i = 0\n    for( const route in routes ){\n      const path = ( route === 'home' )? routes[route].path:routes[route].path[this.state.lang]\n      finalRoutes.push(\n        <Route exact={true} key={'route'+i} path={ '/'+path } render={ (props)=><Page key={'page'+i} lang={this.state.lang} {...props} content={ routes[route] }/> }/>\n      )\n      i++\n    }\n    return finalRoutes\n    // <Route path=\"/\" exact={true} render={ (props)=><Page {...props} content={ this.state }/> }/>\n  }\n  render() {\n    return (\n      <>\n      <HashRouter>\n        <div className=\"canvas-container\">\n          <ThreeRender />\n        </div>\n        <div className=\"main\">\n        <Header infos={ this.state } setLang={ this.setLanguage }/>\n        <Switch>\n          { this.proceduralRoute() }\n        </Switch>\n        </div>\n      </HashRouter>\n      </>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/style.sass';\nimport App from './components/App';\nimport reportWebVitals from './components/reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}