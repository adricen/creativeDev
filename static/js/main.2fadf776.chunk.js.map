{"version":3,"sources":["components/Header.js","components/Page.js","components/App.js","components/reportWebVitals.js","index.js"],"names":["Header","infos","setLang","route","Navbar","bg","variant","className","lang","Container","fluid","Brand","href","Nav","pages","returnedNav","page","path","push","Item","Link","name","proceduralNav","Collapse","finalFlags","flags","countryCode","ariaLabel","i","onClick","e","actualPath","document","location","split","length","target","style","fontSize","flagAside","Page","content","cookies","Cookies","App","props","state","setLanguage","bind","this","setState","Content","defaultLanguage","newLang","oldRoute","set","window","hash","usrLang","get","navigator","language","userLanguage","routes","finalRoutes","console","log","exact","render","proceduralRoute","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2fadf776.chunk.js","sourcesContent":["import Container from 'react-bootstrap/Container'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport ReactCountryFlag from \"react-country-flag\"\n\nconst Header = ({infos, route, setLang }) => {\n    const proceduralNav = () => {\n      const pages = infos.pages\n      const returnedNav = []\n      for ( const page in pages ) {\n        const path = (page === 'home')? pages[page].path:pages[page].path[infos.lang]\n        returnedNav.push(\n          <Nav.Item>\n            <Nav.Link key={ page } href={ \"#/\"+path }>{ pages[page].name[infos.lang]}</Nav.Link>\n          </Nav.Item>\n        )\n      }\n      return returnedNav\n      // <Nav.Link href=\"/home\">{ (infos.pages != null)?infos.pages.home.name[infos.lang]:'rien'}</Nav.Link>\n    }\n    const flagAside = () => {\n      let finalFlags = []\n      const flags = [{\n        lang: 'fr',\n        countryCode:\"FR\",\n        ariaLabel:\"Fran√ßais\"\n      },{\n        lang: 'en',\n        countryCode:\"GB\",\n        ariaLabel:\"English\"\n      }]\n      for( const i in flags) {\n        finalFlags.push(\n          <Nav.Item key={i}><ReactCountryFlag\n          lang={ flags[i].lang }\n          onClick={ (e)=>{\n            let actualPath = document.location.href.split('/')\n            actualPath = actualPath[actualPath.length-1]\n            setLang(e.target.lang, actualPath)\n          }}\n          className={ flags[i].lang + \" emojiFlag\"  }\n          countryCode={ flags[i].countryCode }\n          style={{\n            fontSize: '2em',\n          }}\n          aria-label={ flags[i].ariaLabel }\n          /></Nav.Item>\n        )\n      }\n      return finalFlags\n    }\n    return(\n      <Navbar bg=\"dark\" variant=\"dark\" className={ infos.lang }>\n        <Container fluid=\"md\">\n          <Navbar.Brand key={'key1'} href=\"/\">Adricen</Navbar.Brand>\n          <Nav key={'key2'} className=\"justify-content-center\">\n            { proceduralNav() }\n          </Nav>\n          <Navbar.Collapse key={'key3'} className=\"justify-content-end\">\n            { flagAside() }\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    )\n}\nexport default Header\n","import Container from 'react-bootstrap/Container'\n\nconst Page = ({content, lang}) => {\n  // console.log(content);\n  return(\n    <Container fluid=\"md\">\n      <h1>{content.name[lang]}</h1>\n      <p>{content.content[lang]}</p>\n    </Container>\n  )\n}\nexport default Page\n","import { Component } from 'react'\nimport {HashRouter, Switch, Route} from 'react-router-dom'\nimport Cookies from 'universal-cookie';\nimport Content from \"../content.json\"\nimport Header from \"./Header.js\"\nimport Page from \"./Page.js\"\n\nconst cookies = new Cookies();\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      lang: 'fr',\n      pages: null,\n    }\n    this.setLanguage = this.setLanguage.bind(this)\n  }\n  componentDidMount(){\n    this.setState(Content)\n    this.setState({lang: this.defaultLanguage()})\n  }\n  setLanguage( newLang, oldRoute ){\n    this.setState({ lang: newLang })\n    cookies.set('lang', newLang);\n    // hard way new location -- improvable...\n    if(oldRoute === 'about' && newLang === 'fr'){\n      window.location.hash =  '#/a-propos'\n    } else if(oldRoute === 'a-propos' && newLang === 'en') {\n      window.location.hash =  '#/about'\n    }\n  }\n  defaultLanguage() {\n    let usrLang = cookies.get('lang') || navigator.language || navigator.userLanguage\n    usrLang = (usrLang === 'fr' || usrLang === 'fr-FR' || usrLang === 'fr-fr') ? 'fr': 'en'\n    cookies.set('lang', usrLang);\n    return usrLang\n  }\n  proceduralRoute() {\n    const routes = this.state.pages\n    const finalRoutes = []\n    // console.log(routes.length);\n    let i = 0\n    for( const route in routes ){\n      const path = ( route === 'home' )? routes[route].path:routes[route].path[this.state.lang]\n      console.log(path);\n      finalRoutes.push(\n        <Route exact={true} key={'route'+i} path={ '/'+path } render={ (props)=><Page key={'page'+i} lang={this.state.lang} {...props} content={ routes[route] }/> }/>\n      )\n      i++\n    }\n    return finalRoutes\n    // <Route path=\"/\" exact={true} render={ (props)=><Page {...props} content={ this.state }/> }/>\n  }\n  render() {\n    return (\n      <>\n      <HashRouter >\n        <Header infos={ this.state } setLang={ this.setLanguage }/>\n        <Switch>\n          { this.proceduralRoute() }\n        </Switch>\n      </HashRouter>\n      </>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/style.sass';\nimport App from './components/App';\nimport reportWebVitals from './components/reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}