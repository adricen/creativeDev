{"version":3,"sources":["img/logo.svg","components/Header.js","components/App.js","components/reportWebVitals.js","index.js"],"names":["Header","infos","setLang","console","log","Navbar","bg","variant","className","lang","Container","Brand","href","Nav","pages","returnedNav","page","push","Item","Link","path","name","proceduralNav","Collapse","finalFlags","flags","countryCode","ariaLabel","i","onClick","e","target","style","fontSize","flagAside","App","props","state","setLanguage","bind","this","setState","Content","defaultLanguage","newLang","usrLang","navigator","language","userLanguage","src","logo","alt","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"46BAAe,MAA0B,iC,uCCgE1BA,EAzDA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACtBC,QAAQC,IAAIF,GA0CV,OACE,cAACG,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,UAAYP,EAAMQ,KAAnD,SACE,eAACC,EAAA,EAAD,WACE,cAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,IAAnB,qBACA,cAACC,EAAA,EAAD,CAAKL,UAAU,yBAAf,SA7CgB,WACpB,IAAMM,EAAQb,EAAMa,MACdC,EAAc,GAEpB,IAAM,IAAMC,KADZb,QAAQC,IAAIU,GACQA,EAClBC,EAAYE,KACV,cAACJ,EAAA,EAAIK,KAAL,UACE,cAACL,EAAA,EAAIM,KAAL,CAAUP,KAAOE,EAAME,GAAMI,KAA7B,SAAsCN,EAAME,GAAMK,KAAKpB,EAAMQ,WAInE,OAAOM,EAmCCO,KAEJ,cAACjB,EAAA,EAAOkB,SAAR,CAAiBf,UAAU,sBAA3B,SAlCY,WAChB,IAAIgB,EAAa,GACXC,EAAQ,CAAC,CACbhB,KAAM,KACNiB,YAAY,KACZC,UAAU,eACV,CACAlB,KAAM,KACNiB,YAAY,KACZC,UAAU,YAEZ,IAAK,IAAMC,KAAKH,EACdD,EAAWP,KACT,cAACJ,EAAA,EAAIK,KAAL,UAAU,cAAC,IAAD,CACVT,KAAOgB,EAAMG,GAAGnB,KAChBoB,QAAU,SAACC,GAAO5B,EAAQ4B,EAAEC,OAAOtB,OACnCD,UAAYiB,EAAMG,GAAGnB,KAAO,aAC5BiB,YAAcD,EAAMG,GAAGF,YACvBM,MAAO,CACLC,SAAU,OAEZ,aAAaR,EAAMG,GAAGD,eAI1B,OAAOH,EAUCU,WChBCC,E,kDAnCb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACX5B,KAAM,KACNK,MAAO,MAET,EAAKwB,YAAc,EAAKA,YAAYC,KAAjB,gBANH,E,qDAQlB,WACEC,KAAKC,SAASC,GACdF,KAAKC,SAAS,CAAChC,KAAM+B,KAAKG,sB,yBAE5B,SAAaC,GACXJ,KAAKC,SAAS,CAAEhC,KAAMmC,M,6BAExB,WACE,IAAIC,EAAUC,UAAUC,UAAYD,UAAUE,aAE9C,OADAH,EAAsB,MAAXA,GAA8B,SAAXA,GAAiC,SAAXA,EAAsB,KAAM,O,oBAGlF,WACE,OACE,qCACE,cAAC,EAAD,CAAS5C,MAAQuC,KAAKH,MAAQnC,QAAUsC,KAAKF,cAC7C,6BAAME,KAAK/B,OACX,qBAAKD,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKyC,IAAKC,EAAM1C,UAAU,WAAW2C,IAAI,SACzC,8D,GA7BMC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1229c2da.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Component } from \"react\";\n\nimport Container from 'react-bootstrap/Container'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport ReactCountryFlag from \"react-country-flag\"\n\nconst Header = ({infos, setLang}) => {\n  console.log(setLang);\n    const proceduralNav = () => {\n      const pages = infos.pages\n      const returnedNav = []\n      console.log(pages);\n      for ( const page in pages ) {\n        returnedNav.push(\n          <Nav.Item>\n            <Nav.Link href={ pages[page].path }>{ pages[page].name[infos.lang]}</Nav.Link>\n          </Nav.Item>\n        )\n      }\n      return returnedNav\n      // <Nav.Link href=\"/home\">{ (infos.pages != null)?infos.pages.home.name[infos.lang]:'rien'}</Nav.Link>\n    }\n    const flagAside = () => {\n      let finalFlags = []\n      const flags = [{\n        lang: 'fr',\n        countryCode:\"FR\",\n        ariaLabel:\"Fran√ßais\"\n      },{\n        lang: 'en',\n        countryCode:\"GB\",\n        ariaLabel:\"English\"\n      }]\n      for( const i in flags) {\n        finalFlags.push(\n          <Nav.Item><ReactCountryFlag\n          lang={ flags[i].lang }\n          onClick={ (e)=> { setLang(e.target.lang) } }\n          className={ flags[i].lang + \" emojiFlag\"  }\n          countryCode={ flags[i].countryCode }\n          style={{\n            fontSize: '2em',\n          }}\n          aria-label={ flags[i].ariaLabel }\n          /></Nav.Item>\n        )\n      }\n      return finalFlags\n    }\n    return(\n      <Navbar bg=\"dark\" variant=\"dark\" className={ infos.lang }>\n        <Container>\n          <Navbar.Brand href=\"/\">Adricen</Navbar.Brand>\n          <Nav className=\"justify-content-center\">\n            { proceduralNav() }\n          </Nav>\n          <Navbar.Collapse className=\"justify-content-end\">\n            { flagAside() }\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    )\n}\nexport default Header\n","import { Component } from 'react'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Content from \"../content.json\"\nimport logo from '../img/logo.svg';\nimport Header from \"./Header.js\"\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      lang: 'fr',\n      pages: null\n    }\n    this.setLanguage = this.setLanguage.bind(this)\n  }\n  componentDidMount(){\n    this.setState(Content)\n    this.setState({lang: this.defaultLanguage()})\n  }\n  setLanguage( newLang ){\n    this.setState({ lang: newLang })\n  }\n  defaultLanguage() {\n    let usrLang = navigator.language || navigator.userLanguage\n    usrLang = (usrLang == 'fr' || usrLang == 'fr-FR' || usrLang == 'fr-fr') ? 'fr': 'en'\n    return usrLang\n  }\n  render() {\n    return (\n      <>\n        <Header  infos={ this.state } setLang={ this.setLanguage }/>\n        <h1>{ this.lang }</h1>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h1>Titre principale</h1>\n          </header>\n        </div>\n      </>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/style.sass';\nimport App from './components/App';\nimport reportWebVitals from './components/reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}